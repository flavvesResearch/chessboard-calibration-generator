name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Manuel tetikleme için

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Extract version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          # Release event'inden version al
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version from release tag: $VERSION"
        else
          # Manuel tetikleme için mevcut versiyonu al
          VERSION=$(grep "version = " pyproject.toml | head -1 | cut -d'"' -f2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version from pyproject.toml: $VERSION"
        fi
        
    - name: Update version in files
      if: github.event_name == 'release'
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        # pyproject.toml güncelle
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
        # setup.py güncelle
        sed -i "s/version=\".*\"/version=\"$VERSION\"/" setup.py
        # __init__.py güncelle
        sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" chessboard_generator/__init__.py
        echo "Updated version to $VERSION in all files"
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check distribution
      run: |
        twine check dist/*
        
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
        
    - name: Create GitHub Release Assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
